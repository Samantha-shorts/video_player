group 'matsune.video_player'
version '1.0-SNAPSHOT'

buildscript {
    ext.exoPlayerVersion = "2.18.7"
    ext.kotlinVersion = '1.7.10'
    ext.multidexVersion = "2.0.1"
    ext.lifecycleVersion = "2.4.0"
    ext.workVersion = "2.7.0"
    
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 16
    }

    dependencies {
        implementation "com.google.android.exoplayer:exoplayer-core:$exoPlayerVersion"
        implementation "com.google.android.exoplayer:exoplayer-hls:$exoPlayerVersion"
        implementation "com.google.android.exoplayer:exoplayer-dash:$exoPlayerVersion"
        implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoPlayerVersion"
        implementation "com.google.android.exoplayer:exoplayer-ui:$exoPlayerVersion"
        implementation "com.google.android.exoplayer:extension-mediasession:$exoPlayerVersion"
        implementation "androidx.multidex:multidex:$multidexVersion"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
        implementation "androidx.lifecycle:lifecycle-common:$lifecycleVersion"
        implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
        implementation "androidx.work:work-runtime:$workVersion"

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
